#pragma once

/* Based on wsksymdef.h from NetBSD,
 * but limited to key symbols present on Amiga keyboard. */

typedef enum KeySym {
  /* Special value */
  KS_unknown = 0x00,

  /* ASCII codes (in low byte) */
  KS_Backspace = 0x08,
  KS_Tab = 0x09,
  KS_Return = 0x0d,
  KS_Escape = 0x1b,

  KS_space = 0x20,
  KS_exclam = 0x21,
  KS_quotedbl = 0x22,
  KS_numbersign = 0x23,
  KS_dollar = 0x24,
  KS_percent = 0x25,
  KS_ampersand = 0x26,
  KS_apostrophe = 0x27,
  KS_parenleft = 0x28,
  KS_parenright = 0x29,
  KS_asterisk = 0x2a,
  KS_plus = 0x2b,
  KS_comma = 0x2c,
  KS_minus = 0x2d,
  KS_period = 0x2e,
  KS_slash = 0x2f,
  KS_0 = 0x30,
  KS_1 = 0x31,
  KS_2 = 0x32,
  KS_3 = 0x33,
  KS_4 = 0x34,
  KS_5 = 0x35,
  KS_6 = 0x36,
  KS_7 = 0x37,
  KS_8 = 0x38,
  KS_9 = 0x39,
  KS_colon = 0x3a,
  KS_semicolon = 0x3b,
  KS_less = 0x3c,
  KS_equal = 0x3d,
  KS_greater = 0x3e,
  KS_question = 0x3f,
  KS_at = 0x40,
  KS_A = 0x41,
  KS_B = 0x42,
  KS_C = 0x43,
  KS_D = 0x44,
  KS_E = 0x45,
  KS_F = 0x46,
  KS_G = 0x47,
  KS_H = 0x48,
  KS_I = 0x49,
  KS_J = 0x4a,
  KS_K = 0x4b,
  KS_L = 0x4c,
  KS_M = 0x4d,
  KS_N = 0x4e,
  KS_O = 0x4f,
  KS_P = 0x50,
  KS_Q = 0x51,
  KS_R = 0x52,
  KS_S = 0x53,
  KS_T = 0x54,
  KS_U = 0x55,
  KS_V = 0x56,
  KS_W = 0x57,
  KS_X = 0x58,
  KS_Y = 0x59,
  KS_Z = 0x5a,
  KS_bracketleft = 0x5b,
  KS_backslash = 0x5c,
  KS_bracketright = 0x5d,
  KS_asciicircum = 0x5e,
  KS_underscore = 0x5f,
  KS_grave = 0x60,
  KS_a = 0x61,
  KS_b = 0x62,
  KS_c = 0x63,
  KS_d = 0x64,
  KS_e = 0x65,
  KS_f = 0x66,
  KS_g = 0x67,
  KS_h = 0x68,
  KS_i = 0x69,
  KS_j = 0x6a,
  KS_k = 0x6b,
  KS_l = 0x6c,
  KS_m = 0x6d,
  KS_n = 0x6e,
  KS_o = 0x6f,
  KS_p = 0x70,
  KS_q = 0x71,
  KS_r = 0x72,
  KS_s = 0x73,
  KS_t = 0x74,
  KS_u = 0x75,
  KS_v = 0x76,
  KS_w = 0x77,
  KS_x = 0x78,
  KS_y = 0x79,
  KS_z = 0x7a,
  KS_braceleft = 0x7b,
  KS_bar = 0x7c,
  KS_braceright = 0x7d,
  KS_asciitilde = 0x7e,
  KS_Delete = 0x7f,

  /* Modifiers */
  KS_Shift_L = 0xf101,
  KS_Shift_R = 0xf102,
  KS_Control_L = 0xf103,
  KS_Caps_Lock = 0xf105,
  KS_Alt_L = 0xf107,
  KS_Alt_R = 0xf108,
  KS_Num_Lock = 0xf10b,
  KS_Hold_Screen = 0xf10c,
  KS_Meta_L = 0xf110,
  KS_Meta_R = 0xf111,

  /* Numeric keypad */
  KS_KP_Home = 0xf295,
  KS_KP_Left = 0xf296,
  KS_KP_Up = 0xf297,
  KS_KP_Right = 0xf298,
  KS_KP_Down = 0xf299,
  KS_KP_End = 0xf29a,
  KS_KP_Next = 0xf29b,
  KS_KP_Prior = 0xf29c,
  KS_KP_Insert = 0xf29f,

  /* Numeric keypad (ASCII in low byte) */
  KS_KP_Enter = 0xf20d,
  KS_KP_Multiply = 0xf22a,
  KS_KP_Add = 0xf22b,
  KS_KP_Subtract = 0xf22d,
  KS_KP_Decimal = 0xf22e,
  KS_KP_Divide = 0xf22f,
  KS_KP_Paren_Left = 0xf228,
  KS_KP_Paren_Right = 0xf229,
  KS_KP_0 = 0xf230,
  KS_KP_1 = 0xf231,
  KS_KP_2 = 0xf232,
  KS_KP_3 = 0xf233,
  KS_KP_4 = 0xf234,
  KS_KP_5 = 0xf235,
  KS_KP_6 = 0xf236,
  KS_KP_7 = 0xf237,
  KS_KP_8 = 0xf238,
  KS_KP_9 = 0xf239,
  KS_KP_Delete = 0xf27f,

  /* Function keys */
  KS_f1 = 0xf300,
  KS_f2 = 0xf301,
  KS_f3 = 0xf302,
  KS_f4 = 0xf303,
  KS_f5 = 0xf304,
  KS_f6 = 0xf305,
  KS_f7 = 0xf306,
  KS_f8 = 0xf307,
  KS_f9 = 0xf308,
  KS_f10 = 0xf309,

  KS_Up = 0xf384,
  KS_Down = 0xf385,
  KS_Left = 0xf386,
  KS_Right = 0xf387,
  KS_Help = 0xf38a,
  KS_Print_Screen = 0xf3c2,
} __packed KeySym_t;
